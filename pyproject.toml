[tool.poetry]
name = "email-worker"                       # distribution en kebab-case
version = "1.1.2"
description = "Async email sender using Celery + RabbitMQ (optionally Redis)"
authors = ["Gabriel de Fombelle <gabriel.de.fombelle@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "worker" }]         # garde tel quel si ton code est dans ./worker/

[tool.poetry.dependencies]
python = ">=3.12,<3.13"

# Celery stack
celery = "^5.4.0"                           # (5.5 OK aussi, mais 5.4 est très stable)
# kombu et billiard sont tirés par Celery → pas besoin de les déclarer
# Si tu utilises Redis comme backend/result:
redis = "^5.0.7"

# Broker RabbitMQ (AMQP) : Celery passe par kombu/amqp. Garde pika uniquement si tu publies toi-même des messages hors Celery.
# pika = "^1.3.2"

# Email
aiosmtplib = "^1.1.7"

# Fichiers multi-part pas nécessaires pour un worker → retiré
# python-multipart = "^0.0.12"

# Dépendances internes (DEV, editable)
pytune-helpers-messaging = { path = "../../packages/pytune_helpers_messaging", develop = true }
pytune-configuration = { path = "../../packages/pytune_configuration", develop = true }
simple-logger = { path = "../../packages/simple_logger", develop = true }

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
ruff = "^0.6.8"
mypy = "^1.11.1"
black = "^24.8.0"
isort = "^5.13.2"

[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
email-worker = "worker.email_worker:main"   # exécutable: `poetry run email-worker`
